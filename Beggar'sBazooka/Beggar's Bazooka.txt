--@name Beggar's Bazooka
--@author plonk
--@shared
--Functions - Server
if SERVER then
    enableHud(owner(), true)
    ammo = 0
    canLoad = true
    canShoot = true
    overload = false
    hook.add("tick", "main", function()
        --if owner():getJumpPower() != 300 then owner():setJumpPower(300) end
        if string.endsWith(tostring(owner():getActiveWeapon()),"none]") then
            local function Shoot()
                local P = hologram.create(owner():getEyePos() + Vector(0, -10, -5):getRotated(owner():getEyeAngles()), (owner():getEyeTrace().HitPos-owner():getEyePos()):getAngle(), "models/weapons/w_models/w_rocket.mdl", Vector(0.5))
                P:setAngles(P:getAngles() + Angle(math.random(-1.5, 1.5),math.random(-1.5, 1.5),math.random(-1.5, 1.5)))
                local T = hologram.create(P:getPos(), P:getAngles(), "models/buildables/sentry3_rockets.mdl", Vector(0.5))
                T:setParent(P)
                T:setLocalPos(Vector())
                T:setLocalAngles(Angle())
                CreateProj(P, 1400, 0, (300/1000)*owner():getMaxHealth(), 10, DAMAGE.BLAST, nil, false)
                owner():emitSound("weapons/doom_rocket_launcher.wav", 75, math.random(90,110), 1, 0)
                net.start("playerFired")
                net.send()
            end
            if owner():keyDown(IN_KEY.ATTACK) and canLoad then
                local function overloadExplode()
                    net.start("sendExp")
                    net.writeVector(owner():getAttachment(owner():lookupAttachment("anim_attachment_RH")))
                    net.send()
                    game.blastDamage(owner():getAttachment(owner():lookupAttachment("anim_attachment_RH")), 100, owner():getMaxHealth()/6.67)
                    local mult = 1
                    if owner():isCrouching() then mult = 2 end
                    owner():setVelocity(Vector(0, 350*mult, 0):getRotated(owner():getEyeAngles())+Vector(0,0,250*mult))
                end
                canLoad = false
                ammoAtTheTimeOfStartingLoad = ammo
                timer.simple(0.33, function()
                if not overload then
                    if ammoAtTheTimeOfStartingLoad + 1 < 4 then
                        ammo = ammo + 1
                        owner():emitSound("weapons/dumpster_rocket_reload.wav", 75, 67 + 11*ammo, 1, 0)
                    else
                        overload = true
                        ammo = ammo - 1
                        overloadExplode()
                    end
                else
                    ammo = ammo - 1
                    overloadExplode()
                    if ammo == 0 then overload = false net.start("playerStopLoad") net.send(owner()) end
                end
                end)
                --print(ammo)
                net.start("playerLoad")
                net.send()
                timer.simple(1, function() canLoad = true end)
            end
            if !owner():keyDown(IN_KEY.ATTACK) then overload = false end
            if not owner():keyDown(IN_KEY.ATTACK) and ammo > 0 and canShoot then
                Shoot()
                canShoot = false
                ammo = ammo - 1
                timer.simple(0.25, function() canShoot = true end)
            end
        else
            if ammo != 0 then
                ammo = 0
                canShoot = true
                overload = false
                canLoad = true
            end
        end
    end)
end
--Functions - Projectiles
if SERVER then
    Projs = {}
    Trcr = {}
    maxQ = 0.5
    
    function Projectile()
        local I = 0
        local function rm() if Projs[I] != nil then if Projs[I][7] != nil and Projs[I][6] != "" then  PlayProjectileSound(Projs[I][7], Projs[I][1]:getPos()) end Projs[I][1]:remove() end table.remove(Projs, I) I = I - 1 end
        while I < table.count(Projs) and chip():getQuotaUsed() < chip():getQuotaMax()*maxQ do
            if chip():getQuotaUsed() < chip():getQuotaMax()*maxQ then
                I = I + 1
                local data = Projs[I]
                if data == nil then table.remove(Projs, I) I = I - 1 end
                if data != nil then
                    if data[10] == nil then data[10] = Vector() else data[10] = data[10] + Vector(0,0,-data[3]*game.getTickInterval()) end
                    data[1]:setPos(data[1]:getPos() + Vector(data[2]*game.getTickInterval(),0,0):getRotated(data[1]:getAngles()) + data[10]*game.getTickInterval())
                    local Tr = trace.line(data[1]:getPos() - Vector(data[2]*game.getTickInterval(),0,0):getRotated(data[1]:getAngles()), data[1]:getPos(),{owner(), chip()}, nil, "COLLISION_GROUP.PLAYER", nil)
                    if data[6] != DAMAGE.BLAST then
                        if Tr.Hit and cn(Tr.Entity) and hasPermission("entities.applyDamage", Tr.Entity) then
                            Tr.Entity:applyDamage(data[4], owner(), data[1], data[6], data[1]:getPos())
                        end
                    end
                    if Tr.Hit then if data[6] != DAMAGE.BLAST then 
                        game.bulletDamage(data[1]:getPos() - Vector(data[2]*game.getTickInterval(),0,0):getRotated(data[1]:getAngles()), Vector(1,0,0):getRotated(data[1]:getAngles()), 1, 1, 1000, 50, nil, 1, owner(), nil) 
                        else
                    game.blastDamage(Tr.HitPos, data[4]/2, data[4]) 
                    if data[8] then local p = prop.create(Tr.HitPos, Angle(), "models/props_phx/misc/potato_launcher_explosive.mdl", true) p:breakEnt() else
                        local eff = effect.create()
                        --eff:setOrigin(Tr.HitPos)
                        --eff:play("Explosion")
                        net.start("sendExp")
                        net.writeVector(Tr.HitPos)
                        net.send()
                        end end rm() end
                        
                    data[5] = data[5] - game.getTickInterval()
                    if data[5] <= 0 then rm() end
                end
            end
        end
    end
    
    function CreateProj(e, speed, grav, damage, lifetime, dmtype, snd, makeProp)
        if makeProp == nil then makeProp = true end
        table.add(Projs, {{e, speed, grav, damage, lifetime, dmtype, snd, makeProp}})
    end
    
    function Fire(pos, ang, endPos, len, dam, adddam, type, col)
        if ang == nil then ang = (endPos-pos):getAngle() end
        local Tr = trace.line(pos, pos + Vector(len,0,0):getRotated(ang), {chip(), owner()}, nil, "COLLISION_GROUP.PLAYER", false)
        if Tr.Hit and cn(Tr.Entity) and hasPermission("entities.applyDamage", Tr.Entity) and adddam != nil then
        local Dist = Tr.HitPos:getDistance(pos)
        if Dist >= adddam[2] then adddam[1] = adddam[1] - (Dist - adddam[2])/adddam[3] end
        Tr.Entity:applyDamage(adddam[1], owner(), owner(), type, Tr.HitPos) 
        end
        if Tr.Hit then
            local Tracer = CreateTracer(pos, (pos-Tr.HitPos):getAngle()-Angle(180,0,0), 0.125*5, Tr.HitPos:getDistance(pos), col)
            local Dist = Tr.HitPos:getDistance(pos)
            if dam != nil then
                if Dist >= dam[2] then dam[1] = dam[1] - (Dist - dam[2])/dam[3] end
                game.bulletDamage(pos, Vector(1,0,0):getRotated(ang), dam[1], 1, 100, len, nil, 1, owner(), nil)
            end
            return Tracer
        else
            local Tracer = CreateTracer(pos, ang, 0.125*5, len, col)
            return Tracer
        end
    end
    
    function Tracer()
        local I = 0
        local function rm() table.remove(Trcr, I) I = I - 1 end
        while I < table.count(Trcr) do
            I = I + 1 
            local Data = Trcr[I]
            if Data != nil then
            if not cn(Data[1]) then rm() else if hasPermission("entities.remove", Data[1]) then
            Data[2] = Data[2] - game.getTickInterval()*Data[4]
            if Data[2] <= 0 then Data[1]:remove() rm() end 
            Data[1]:setScale(Vector(Data[2]*Data[3], Data[2]*Data[3], math.lerp(Data[6], Data[1]:getScale().z, Data[5])))
            end
            end end
        end
    end
    
    function CreateTracer(pos, ang, width, len, col, sloss, lenSpeed)
        local A = hologram.create(pos, ang, "models/hunter/tubes/tube1x1x2.mdl", Vector(0))
        local Tr = hologram.create(pos, ang, "models/hunter/tubes/tube1x1x2.mdl", Vector(width, width, (len+1)/95))
        Tr:setParent(A)
        Tr:setLocalAngles(Angle(90,0,0))
        Tr:setParent(nil)
        A:remove()
        Tr:suppressEngineLighting(true)
        Tr:setColor(col)
        Tr:setMaterial("models/debug/debugwhite")
        if sloss == nil then sloss = 1 end
        if lenSpeed == nil then lenSpeed = 0.15 end
        table.add(Trcr, {{Tr, 1, width, sloss, Tr:getScale().z, lenSpeed}})
        Tr:setScale(Vector(width, width, 0))
        return Tr
    end
    
    function PlayProjectileSound(snd, pos)
        local ply = hologram.create(pos, Angle(), "models/sprops/misc/bone_from_x.mdl", Vector(0))
        ply:emitSound(snd, 75, math.random(90, 110), 1, 1)
        timer.simple(1, function()ply:remove()end)
    end

    hook.add("Tick", "proj-think-weapon-swap", function()
        Projectile()
        Tracer()
    end)
end
--Functions - Client 
if CLIENT then
    net.receive("sendExp", function()
        local H = hologram.create(net.readVector(), Angle(), "models/hunter/plates/plate.mdl", Vector(0))
        local P = particleEffect.attach(H, "ExplosionCore_MidAir", 0, {})
        H:emitSound("weapons/explode1.wav", 75, math.random(90,110), 0.75, 0)
        timer.simple(2, function() P:destroy() H:remove() end)
    end)   
    net.receive("playerFired", function()
        owner():resetGesture(2)
        owner():playGesture("Range_Shotgun", false, 2, 1)
        if vmHolo != nil and vmHolo:isValid() then
            vmHolo:setAnimation("Fire", 0, 1)
        end
    end) 
    net.receive("playerLoad", function()
        owner():resetGesture(2)
        owner():playGesture("Reload_Pistol", false, 2, 1)
        if vmHolo != nil and vmHolo:isValid() then
            vmHolo:setAnimation("Reload_Loop", 0, 0.75)
        end
    end)
    net.receive("playerStopLoad", function()
        if vmHolo != nil and vmHolo:isValid() then
            vmHolo:setAnimation("Idle", 0, 1)
        end
    end)
    camEnabled = false
    if player() == owner() then
        hook.add("calcview", "view calc", function()
            if camEnabled then
            local Tr = trace.line(owner():getEyePos(), owner():getEyePos()+(Vector(-150,-50,32.5)*0.5):getRotated(owner():getEyeAngles()), {owner(), chip()}, nil, "COLLISION.GROUP_PLAYER", nil)
            local rotatevec = Vector(0)
            if Tr.Hit then
            rotatevec = Tr.HitPos-(Vector(-150,-50,32.5)/10):getRotated(owner():getEyeAngles())  
            else
            rotatevec = owner():getEyePos()+(Vector(-150,-50,32.5)*0.5):getRotated(owner():getEyeAngles())
            end
            local Tr2 = trace.line(owner():getEyePos(), owner():getEyePos()+Vector(10000,0,0):getRotated(owner():getEyeAngles()), {owner(), chip()}, nil, "COLLISION.GROUP_PLAYER", nil)
            local angle = Angle(0)
            if Tr2.Hit then
            angle = (Tr2.HitPos-rotatevec):getAngle()
            else
            angle = owner():getEyeAngles()
            end
            
            local drawViewer = true
            
            if rotatevec:getDistance(owner():getEyePos()) < 25 then drawViewer = false end
            
            local view = {
                origin = rotatevec,
                angles = angle,
                drawviewer = drawViewer
            }
            return view 
            else
                local view = {
                origin = owner():getEyePos(),
                angles = owner():getEyeAngles(),
                drawviewer = false
                }
                return view 
            end
        end)
    end
    playingGesture = 0
    playingGesture2 = 0
    keystate = 0
    hook.add("think", "the thinker", function()
        if string.endsWith(tostring(owner():getActiveWeapon()),"none]") then
            if player() != owner() or camEnabled then
                if holo != nil and holo:isValid() then
                Pos, Ang = owner():getAttachment(owner():lookupAttachment("anim_attachment_RH"))
                holo:setPos(Pos)
                holo:setAngles(Ang)
                else
                holo = hologram.create(owner():getEyePos(), owner():getEyeAngles(), "models/workshop/weapons/c_models/c_dumpster_device/c_dumpster_device.mdl", Vector(0.75))
                holo:setParent(owner())
                end
            end
            if player() == owner() and not camEnabled and holo != nil and holo:isValid() then holo:remove() end
            --if owner():keyDown(IN_KEY.RELOAD) and keystate != 1 then camEnabled = !camEnabled keystate = 1 end
            --if not owner():keyDown(IN_KEY.RELOAD) then keystate = 0 end
            if owner():getWaterLevel() < 1 then
                if not owner():isCrouching() then
                    if owner():isOnGround() and owner():getVelocity():setZ(0):getLength() < 10 and playingGesture != 1 then
                    owner():resetGesture(1)
                    owner():playGesture("Idle_Rpg", true, 1, 1)
                    playingGesture = 1
                    end
                    if owner():isOnGround() and owner():getVelocity():setZ(0):getLength() >= 10 and playingGesture != 2 then
                    owner():resetGesture(1)
                    owner():playGesture("Run_Rpg", true, 1, 1)
                    playingGesture = 2
                    end
                else
                    if owner():isOnGround() and owner():getVelocity():setZ(0):getLength() < 10 and playingGesture != 3 then
                    owner():resetGesture(1)
                    owner():playGesture("Cidle_Rpg", true, 1, 1)
                    playingGesture = 3
                    end
                    if owner():isOnGround() and owner():getVelocity():setZ(0):getLength() >= 10 and playingGesture != 4 then
                    owner():resetGesture(1)
                    owner():playGesture("CWalk_Rpg", true, 1, 1)
                    playingGesture = 4
                    end
                end
                if !owner():isOnGround() and playingGesture != 5 then
                    owner():resetGesture(1)
                    owner():playGesture("Jump_Rpg", true, 1, 1)
                    playingGesture = 5
                end
            else
                if owner():getVelocity():setZ(0):getLength() < 10 and playingGesture != 6 then
                    owner():resetGesture(1)
                    owner():playGesture("Swim_Idle_Rpg", true, 1, 1)
                    playingGesture = 6
                end
                if  owner():getVelocity():setZ(0):getLength() >= 10 and playingGesture != 7 then
                    owner():resetGesture(1)
                    owner():playGesture("Swimming_Rpg", true, 1, 1)
                    playingGesture = 7
                end
            end
        else
            if holo != nil and holo:isValid() then
            holo:remove() end
            if playingGesture > 0 then
                owner():resetGesture(1)
                playingGesture = 0
                playingGesture2 = 0
            end
        end
        if !string.endsWith(tostring(owner():getActiveWeapon()), "none]") and camEnabled then camEnabled = false end
    end)

    if player() == owner() then
        local vmHolo2
        hook.add("think", "BazookaVMCreate", function()
            if string.endsWith(tostring(owner():getActiveWeapon()),"none]") and not camEnabled then
            if vmHolo == nil or !vmHolo:isValid() then
                rot = 90
                pos = -15
                vmHolo = hologram.create(owner():getEyePos() + Vector(pos,0,0):getRotated(owner():getEyeAngles()), owner():getEyeAngles() + Angle(rot,0,0), "models/weapons/v_models/v_rocketlauncher_soldier.mdl", Vector(0.5))
                vmHolo:setRenderGroup(RENDERGROUP.VIEWMODEL)
                vmHolo:setAnimation("Idle", 0, 1)
                vmHolo:setSubMaterial(2, "Models/effects/vol_light001")
                vmHolo2 = hologram.create(vmHolo:getBonePosition(vmHolo:lookupBone("rl_body"))+Vector(0,0,-4.5):getRotated(vmHolo:getAngles()), vmHolo:getAngles(), "models/workshop/weapons/c_models/c_dumpster_device/c_dumpster_device.mdl", Vector(0.6))
                vmHolo2:setRenderGroup(RENDERGROUP.VIEWMODEL)
                vmHolo2:setParent(vmHolo, nil, vmHolo:lookupBone("rl_body"))
                owner():emitSound("player/taunt_workout_get_up_draw.wav", 75, 100, 1, 1)
            else
                if rot > 0 then
                rot = rot - timer.frametime()*270 else rot = 0 end
                if pos < 0 then
                pos = pos + timer.frametime()*45 else pos = 0 end
            end
            else
                if vmHolo != nil and vmHolo:isValid() then vmHolo:remove() end
                if vmHolo2 != nil and vmHolo2:isValid() then vmHolo2:remove() end
            end
        end)
        hook.add("PreDrawViewModels", "BazookaVM", function() 
            if string.endsWith(tostring(owner():getActiveWeapon()),"none]") and not camEnabled and vmHolo != nil and vmHolo:isValid() then
                vmHolo:setPos(owner():getEyePos() + Vector(15+pos,0,-1):getRotated(owner():getEyeAngles()))
                vmHolo:setAngles(owner():getEyeAngles()+Angle(rot,-rot,0))
            end
        end)
    end
end
