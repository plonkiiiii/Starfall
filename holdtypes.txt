--@name Holdtypes
--@author plonk
--@shared

if CLIENT then
    players = {}
    local function GetAllPlayers()
        local p = find.allPlayers()
        local I = 0
        while I < table.count(p) do I = I + 1
            if p[I] != nil and p[I]:isPlayer() then
                table.add(players, {p[I]:getName()})
            end
        end
    end
    GetAllPlayers()
    holdTypes = {
        --[name] = {holdtype, int}
    }
    function SetHoldType(player, holdtype)
        holdTypes[player:getName()] = {holdtype, 0}
    end
    function ReSetHoldType(player)
        if holdTypes[player:getName()] != nil then
        table.removeByValue(holdTypes, holdTypes[player:getName()])
        player:resetGesture(1)
        end
    end
    hook.add("PlayerConnect", "", function(networkid, name, userid, isbot) table.add(players, name) end)
    hook.add("PlayerDisconnect", "", function(networkid, name, userid, isbot) table.removeByValue(players, name) end)
    hook.add("think", "thinker", function()
        local I = 0
        while I < table.count(players) do I = I + 1
            local p = find.playersByName(players[I], true, true)[1]
            if holdTypes[players[I]] != nil then
                if p:getWaterLevel() < 1 then
                    if not p:isCrouching() then
                        if p:isOnGround() and p:getVelocity():setZ(0):getLength() < 10 and holdTypes[players[I]][2] != 1 then
                        p:resetGesture(1)
                        p:playGesture("Idle_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 1
                        end
                        if p:isOnGround() and p:getVelocity():setZ(0):getLength() >= 10 and holdTypes[players[I]][2] != 2 then
                        p:resetGesture(1)
                        p:playGesture("Run_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 2
                        end
                    else
                        if p:isOnGround() and p:getVelocity():setZ(0):getLength() < 10 and holdTypes[players[I]][2] != 3 then
                        p:resetGesture(1)
                        p:playGesture("Cidle_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 3
                        end
                        if p:isOnGround() and p:getVelocity():setZ(0):getLength() >= 10 and holdTypes[players[I]][2] != 4 then
                        p:resetGesture(1)
                        p:playGesture("CWalk_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 4
                        end
                    end
                    if !p:isOnGround() and holdTypes[players[I]][2] != 5 then
                        p:resetGesture(1)
                        p:playGesture("Jump_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 5
                    end
                else
                    if p:getVelocity():setZ(0):getLength() < 10 and holdTypes[players[I]][2] != 6 then
                        p:resetGesture(1)
                        p:playGesture("Swim_Idle_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 6
                    end
                    if  p:getVelocity():setZ(0):getLength() >= 10 and holdTypes[players[I]][2] != 7 then
                        p:resetGesture(1)
                        p:playGesture("Swimming_"..holdTypes[players[I]][1], true, 1, 1)
                        holdTypes[players[I]][2] = 7
                    end
                end
            end
        end
    end)
end
